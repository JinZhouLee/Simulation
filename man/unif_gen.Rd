% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/unif_gen.R
\name{unif_gen}
\alias{unif_gen}
\title{Uniform distribution generation}
\usage{
unif_gen(
  n,
  min = 0,
  max = 1,
  seed = NULL,
  method = c("LL", "LC"),
  para = list(a = 7^5, c = 0, m = 2^31 - 1)
)
}
\arguments{
\item{n}{positive integer: sample size}

\item{min}{finite value: the lower limit of uniform distribution}

\item{max}{finite value: the upper limit of uniform distribution}

\item{seed}{positive integer: the generation seed}

\item{method}{generation method: can be "LL" Learmonth-Lewis Generator (default) or "LC" Linear Congruential Generator}

\item{para}{parameter of LC method}
}
\value{
a size n vector
}
\description{
Can be used to generate a uniform distribution, using the recursive method
\deqn{Z_t = (a Z_{t-1} + c) \ (\text{mod } m)}
and return
\deqn{U_t = Z_i / m \sim \text{Unif} (0, 1)}
}
\details{
Linear congruential generator ("LC" method) must determined a, c, m;

Learmonth-Lewis Generator ("LL" method) is a special case of linear congruential generator, that
\deqn{a = 7^5 = 16807}
\deqn{c = 0}
\deqn{m = 2^{31} - 1 = 2147483647}
}
\examples{
unif_gen(10)
}
